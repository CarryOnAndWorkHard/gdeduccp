<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.gd.ccp.dao.VotersMapper">
	<resultMap id="BaseResultMap" type="edu.gd.ccp.entity.Voters">
		<id column="voterId" property="voterid" jdbcType="INTEGER" />
		<result column="voteTaskId" property="votetaskid" jdbcType="INTEGER" />
		<result column="voterState" property="voterstate" jdbcType="VARCHAR" />
		<result column="voteTime" property="votetime" jdbcType="TIMESTAMP" />
		<result column="organizationNo" property="organizationno"
			jdbcType="VARCHAR" />
		<result column="remind" property="remind" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		voterId, voteTaskId, voterState, voteTime,
		organizationNo,remind
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from voters
		where voterId = #{voterid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from voters
		where voterId = #{voterid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="edu.gd.ccp.entity.Voters">
		insert into voters (voterId,
		voteTaskId, voterState,
		voteTime, organizationNo)
		values
		(#{voterid,jdbcType=INTEGER}, #{votetaskid,jdbcType=INTEGER},
		#{voterstate,jdbcType=VARCHAR},
		#{votetime,jdbcType=TIMESTAMP},
		#{organizationno,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="edu.gd.ccp.entity.Voters">
		insert into voters
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="voterid != null">
				voterId,
			</if>
			<if test="votetaskid != null">
				voteTaskId,
			</if>
			<if test="voterstate != null">
				voterState,
			</if>
			<if test="votetime != null">
				voteTime,
			</if>
			<if test="organizationno != null">
				organizationNo,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="voterid != null">
				#{voterid,jdbcType=INTEGER},
			</if>
			<if test="votetaskid != null">
				#{votetaskid,jdbcType=INTEGER},
			</if>
			<if test="voterstate != null">
				#{voterstate,jdbcType=VARCHAR},
			</if>
			<if test="votetime != null">
				#{votetime,jdbcType=TIMESTAMP},
			</if>
			<if test="organizationno != null">
				#{organizationno,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="edu.gd.ccp.entity.Voters">
		update voters
		<set>
			<if test="votetaskid != null">
				voteTaskId = #{votetaskid,jdbcType=INTEGER},
			</if>
			<if test="voterstate != null">
				voterState = #{voterstate,jdbcType=VARCHAR},
			</if>
			<if test="votetime != null">
				voteTime = #{votetime,jdbcType=TIMESTAMP},
			</if>
			<if test="organizationno != null">
				organizationNo = #{organizationno,jdbcType=VARCHAR},
			</if>
			<if test="remind != null">
				remind = #{remind,jdbcType=INTEGER},
			</if>
		</set>
		where voterId = #{voterid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="edu.gd.ccp.entity.Voters">
		update voters
		set
		voteTaskId = #{votetaskid,jdbcType=INTEGER},
		voterState =
		#{voterstate,jdbcType=VARCHAR},
		voteTime =
		#{votetime,jdbcType=TIMESTAMP},
		organizationNo =
		#{organizationno,jdbcType=VARCHAR},
		remind = #{remind,jdbcType=INTEGER}
		where voterId =
		#{voterid,jdbcType=INTEGER}
	</update>


	<!-- 2018.12.07 -->
	<!-- 提交数据时，该票作废 -->
	<update id="updateStateOnVoters">
		update
		voters
		set
		voterState = "已投",
		voteTime =
		DATE_FORMAT(NOW(),'%Y-%m-%d %H:%m:%s')
		where voterId = #{voterId}

	</update>
	<!-- 根据用户单位号及任务id获取voter -->
	<select id="selectVoterByOrganizationNo" resultType="Voters">
		select *
		from voters
		where voteTaskId=#{voteTaskId} and
		organizationNo=#{organizationNo}
	</select>
	<!-- 根据投票任务删除所有投票单位任务 -->
	<delete id="deleteVoterByVoterTaskId" parameterType="java.lang.Integer">
		delete from
		voters
		where voteTaskId = #{voteTaskId,jdbcType=INTEGER}
	</delete>
	<!-- 学校待投票任务数 -->
	<select id="unvoteTaskCountByOrganizationNo" resultType="Integer">
		select
		count(*) as unVoteCount from voters where
		organizationNo=#{organizationNo} and voterState='未投'
	</select>
	<!--统计某次投票总应投、未投数 -->
	<select id="voteTaskCountByVoteTaskId" resultType="Map">
		select
		count(*) as count1,count(case when voterState = '未投' THEN 1 ELSE NULL
		END) as count2
		from voters
		where voteTaskId=#{voteTaskId}
	</select>
	<!--统计某次投票总应投、未投数 -->
	<select id="selectVoterByVoteTaskId" resultType="Map">
		select
		o.organizationId,o.organizationName,o.organizationNo,v.voterState,v.voteTaskId,v.voterId,v.voteTime,vk.title,vk.deadLine
		from voters v INNER JOIN organization o on
		v.organizationNo=o.organizationNo
		LEFT JOIN votetask vk on v.voteTaskId=vk.voteTaskId
		where v.voteTaskId=#{voteTaskId}
		order by v.voterState desc
	</select>
</mapper>